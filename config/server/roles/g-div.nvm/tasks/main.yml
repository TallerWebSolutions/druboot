---
- name: Install dependencies
  sudo: yes
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - git
    - curl
    - build-essential
    - libssl-dev
  tags: nvm

- name: Check for nvm
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  stat: path=~{{ nvm_user }}/.nvm
  register: nvm_path

- name: Install nvm
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  git: repo=https://github.com/creationix/nvm.git dest=~{{ nvm_user }}/.nvm version={{ nvm_version }}
  tags: nvm
  when: not nvm_path.stat.exists

- name: Source nvm
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  lineinfile: >
    dest={{ nvm_profile_file }}
    line="source ~{{ nvm_user }}/.nvm/nvm.sh"
  tags: nvm

- name: Install node
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  shell: . ~{{ nvm_user }}/.nvm/nvm.sh && nvm install {{ nvm_node_version }} executable=/bin/{{ nvm_shell }}
  tags: nvm

- name: Set default node version to installed node
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  shell: . ~{{ nvm_user }}/.nvm/nvm.sh && nvm alias default {{ nvm_node_version }} executable=/bin/{{ nvm_shell }}
  tags: nvm

- name: Search npm binary
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  shell: . ~{{ nvm_user }}/.nvm/nvm.sh && which npm executable=/bin/{{ nvm_shell }}
  register: npm_executable
  ignore_errors: yes
  changed_when: false

- name: Install general package
  sudo: yes
  sudo_user: "{{ nvm_user }}"
  npm: name={{ item }} global=yes executable={{ npm_executable.stdout }}
  with_items: nvm_packages
